@model List<Model.TeamMembers>

@{
                /**/

                ViewBag.Title = "CoachEdit";
}

<h2>Coach Index</h2>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {

        $("td:nth-child(13) input[type=checkbox]").prop('disabled', true);
        $("td:nth-child(14) input[type=checkbox]").prop('disabled', true);
        var $IsCaptaincheckboxes = $('td:nth-child(14) input[type="checkbox"]');
        var $IsSelectedcheckboxes = $('td:nth-child(12) input[type="checkbox"]');
        var IsSelectChecked = $IsSelectedcheckboxes.filter(':checked');
        var IsCaptainChecked = $IsCaptaincheckboxes.filter(':checked');
        $(IsSelectChecked).closest("tr").find('td:nth-child(14) input[type=checkbox]').not(':checked').attr("disabled", false);
        if (IsSelectChecked) {
            if (IsCaptainChecked) {
                $(IsSelectChecked).closest("tr").find('td:nth-child(14) input[type=checkbox]').not(':checked').attr("disabled", true);
                // $('td:nth-child(12) input[type=checkbox]').attr("Checked", true);
                //$(this).closest("tr").find("input[type=checkbox]").prop('checked', true);
                //$(this).closest("tr").find("td:nth-child(13) input[type=checkbox]").prop('checked', true);
            }
            $(IsSelectChecked).closest("tr").find("td:nth-child(13) input[type=checkbox]").prop('disabled', false);
            $(IsSelectChecked).closest("tr").find("td:nth-child(14) input[type=checkbox]").prop('disabled', false);
            //$("td:nth-child(13) input[type=checkbox]").prop('disabled', false);
            //$("td:nth-child(14) input[type=checkbox]").prop('disabled', false);
           // alert('Good');
        }

        $IsCaptaincheckboxes.change(function () {
            var Count = $IsCaptaincheckboxes.filter(':checked').length;
            // $('#count-checked-checkboxes').text(countCheckedCheckboxes);
            if (Count >=1) {
                $('td:nth-child(14) input[type=checkbox]').not(':checked').attr("disabled", true);
               // $('td:nth-child(12) input[type=checkbox]').attr("Checked", true);
                //$(this).closest("tr").find("input[type=checkbox]").prop('checked', true);
                $(this).closest("tr").find("td:nth-child(13) input[type=checkbox]").prop('checked', true);
            }
            else {
                $(IsSelectChecked).closest("tr").find('td:nth-child(14) input[type=checkbox]').not(':checked').attr("disabled", false);
                //$(IsSelectChecked).closest("tr").find("td:nth-child(14) input[type=checkbox]").prop('disabled', false);
                // $('td:nth-child(12) input[type=checkbox]').prop("Checked", false);
                //$(this).closest("tr").find("input[type=checkbox]").prop('checked', false);
                //$(this).closest("tr").find("td:nth-child(12) input[type=checkbox]").prop('checked', false);
            }

        });
        $IsSelectedcheckboxes.change(function () {
            //var Count = $checkboxes.filter(':checked').length;
            // $('#count-checked-checkboxes').text(countCheckedCheckboxes);
            if ($(this).is(":checked")) {
                $(this).closest("tr").find("td:nth-child(13) input[type=checkbox]").prop('checked', false);
                $(this).closest("tr").find("td:nth-child(14) input[type=checkbox]").prop('checked', false);
                $(this).closest("tr").find("td:nth-child(13) input[type=checkbox]").prop('disabled', false);
                $(this).closest("tr").find("td:nth-child(14) input[type=checkbox]").prop('disabled', false);
            }
            else {
                $(this).closest("tr").find("td:nth-child(13) input[type=checkbox]").prop('checked', false);
                $(this).closest("tr").find("td:nth-child(14) input[type=checkbox]").prop('checked', false);
                $(this).closest("tr").find('td:nth-child(14) input[type=checkbox]').prop('disabled', true);
                $(this).closest("tr").find('td:nth-child(13) input[type=checkbox]').prop('disabled', true);

            }

        });
        $("#btnSave").click(function () {
            var $IsSelectCheckboxes = $('td:nth-child(12) input[type="checkbox"]');
            var $IsCaptainCheckboxes = $('td:nth-child(14) input[type="checkbox"]');
            var IsSelectCount = $IsSelectCheckboxes.filter(':checked').length;
            var IsCaptainCount = $IsCaptainCheckboxes.filter(':checked').length;
            
            if (IsCaptainCount< 1) {
                alert('Minimum One Players should be selected as Captain');
                //$("#btnSave").attr("disabled", true);
                return false;
            }
            if (IsSelectCount < 15) {
                alert('Minimum 15 Players should be selected for Team');
                //$("#btnSave").attr("disabled", true);
                return false;
            }

        });

    });



</script>
<p>
    @*Welcome : @ViewBag.Username [@ViewBag.Role]*@
    @*@Html.ActionLink("Create New", "Create")*@

</p>
@using (@Html.BeginForm("CoachEdit", "Cricket", FormMethod.Post))
{
    <table class="table" id="tbllist">
        <tr>
            <th hidden>
                Id
            </th>
            <th>
                Sr.No.
            </th>
            <th>
                First Name
            </th>
            <th>
                Last Name
            </th>
            <th>
                Total Matches Played
            </th>
            <th>
                Contact No
            </th>
            <th>
                Email
            </th>
            <th>
                DOB
            </th>
            <th>
                Height
            </th>
            <th>
                Weight
            </th>
            <th>
                Role
            </th>
            <th>
                Is Selected
            </th>
            <th>
                Is Playing
            </th>
            <th>
                Is Captain
            </th>
            <th></th>
        </tr>
        @{ int a = 1; }
        @for (int i = 0; i < Model.Count; i++)
        {
            <tr>
                <td hidden>
                    @Html.HiddenFor(modelItem => modelItem[i].Id)
                </td>
                <td>
                    @(a++)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => modelItem[i].FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => modelItem[i].LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => modelItem[i].TotalMatchesPlayed)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => modelItem[i].ContactNo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => modelItem[i].Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => modelItem[i].DOB)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => modelItem[i].Height)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => modelItem[i].Weight)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => modelItem[i].Role)
                </td>
                <td>
                    @Html.CheckBoxFor(modelItem => modelItem[i].IsSelected, new { htmlAttributes = new { @class = "form-control" } })
                    @*@Html.DropDownListFor(modelItem=>modelItem[i].IsSelected, new List<SelectListItem>
                            { new SelectListItem { Text="Yes",Value="YES"},
                            new SelectListItem { Text="NO",Value="NO"} },"-Select-",
                        htmlAttributes: new { @class = "form-control" })*@
                    @*@Html.DropDownListFor(modelItem=>modelItem[i].IsSelected,Model[i].YesNo, htmlAttributes: new { @class = "form-control" })*@
                    @*@Html.DropDownListFor(modelItem => modelItem[i].IsSelected, new SelectList(Model[i].IsSelected, "Value", "Text"))*@
                    @*@Html.DropDownListFor(model => model[i].IsSelected, (IEnumerable
                        <SelectListItem>)ViewBag.YESNO)*@

                </td>
                <td>
                    @Html.CheckBoxFor(modelItem => modelItem[i].IsPlaying, new { htmlAttributes = new { @class = "form-control" } })
                    @*@Html.DropDownList("IsPlaying", new List<SelectListItem>
                           { new SelectListItem { Text="NO",Value="NO"},
                           new SelectListItem { Text="YES",Value="YES"} },
                        "-Select-", htmlAttributes: new { @class = "form-control" })*@
                    @*@Html.DropDownListFor(modelItem => modelItem[i].IsPlaying, Model[i].YesNo, htmlAttributes: new { @class = "form-control" })*@
                </td>
                <td>
                    @Html.CheckBoxFor(modelItem => modelItem[i].IsCaptain, new { htmlAttributes = new { @class = "form-control" } })
                    @*@Html.DropDownList("IsCaptain", new List<SelectListItem>
                           { new SelectListItem { Text="NO",Value="NO"},
                           new SelectListItem { Text="YES",Value="YES"} },
                        "-Select-", htmlAttributes: new { @class = "form-control" })*@
                    @*@Html.DropDownListFor(modelItem => modelItem[i].IsCaptain, Model[i].YesNo, htmlAttributes: new { @class = "form-control" })*@
                </td>

            </tr>
        }

    </table>

    <div class="form-group">
        <div class="col-md-6">
            <div class="col-md-6">
                <input type="submit" value="Save" class="btn btn-success" id="btnSave"/>
            </div>
        </div>
    </div>
}

